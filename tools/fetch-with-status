#!/bin/bash

get_branch_info()
{
    git-branch|grep '^\* '|sed 's/(no branch)/NOBRANCH/'
}

get_branch()
{
    get_branch_info|awk '{ print $2 }'
}

guess_branch()
{
    local branch

    branch=`get_branch`
    [ "$branch" = NOBRANCH -o ! "$branch" ] && branch="$SUPERBRANCH"
    [ "$branch" = NOBRANCH ] && branch=master
    echo "$branch"
}

does_contain()
{
	git-log -1 --pretty=oneline "$1".."$2" 2>/dev/null
}

# TODO: the calls to print_branch do not handle branches with delimiters in them
print_branch()
{
	echo `git-branch -a -v|grep "$1"|sed 's/..//'|awk '{print $1}'`
}

    modulename=`basename "$PWD"`

    git-fetch -q 2>/dev/null
    git-fetch --tags
    if git-status|grep '^# Changes to be committed:' >/dev/null
    then
	echo There are uncommited changes.
    fi

    if git-status|grep '^# Changed but not updated:' >/dev/null
    then
	echo There are changes not yet added.
    fi

    if (git-status|grep '^# Untracked files:' >/dev/null) ; then
	echo There are untracked files.
    fi

    (
    if cd ../../.git 2>/dev/null
    then
	parent=`cd .. && git-submodule status pkgs/"$modulename"|sed 's/\(.\).*/\1/'`;
	case "$parent" in
	    '+' ) echo This submodule has a commit not in the parent.;;
	    '-' ) echo This submodule is not up to date.;;
	esac
    fi
    )

    branch=`guess_branch`
    upstream=origin/"$branch"
    if [ "$branch" ]
    then
        git-cat-file -e "$upstream" || upstream=origin/master
        diffs=`git-diff "$upstream"|head -1`
    else
        echo "No branch checked out."
    fi

    in_repo_local=
    in_repo=
    if [ "$diffs" ]
    then
	in_repo_local=`does_contain "$upstream" "$branch"`
	[ "$in_repo_local" ] && echo "A local commit is not in the remote repo: `print_branch $branch`."

	in_repo=`does_contain "$branch" "$upstream"`
	[ "$in_repo" ] && echo "Local branch does not have a commit from the remote repo: `print_branch $upstream`."
   fi

   git-branch -a -v|sed -e '/^  origin/d' -e 's/..//'|awk '{print $2}'|sort -u>/tmp/$$-branchlist
   git-branch -a -v|awk '/^  origin/ {print $2}'|sort -u>/tmp/$$-originlist
   local_only=`comm -23 /tmp/$$-{branchlist,originlist}`

   # [ ! "$local_only" ] || [ "$in_repo_local" ] || [ "$in_repo" ] ||
	# echo "The remote repo is missing a commit from a non-checked-out local branch (or no branch is checked out at all)."

   for i in $local_only
   do
      # TODO: this match is overly general
      case `print_branch $i` in
      *"$branch"* )
		continue
		;;
      esac

      for j in `cat /tmp/$$-originlist`
      do
         branch_in_repo+=`does_contain "$i" "$j"`
      done
      [ "$branch_in_repo" ] || (echo -n "Commit not in remote repo: `print_branch $i`" && echo)

      for j in `cat /tmp/$$-originlist`
      do
         repo_in_branch+=`does_contain "$j" "$i"`
      done
      if [ ! "$repo_in_branch" ]
      then
	echo -n "Local branch is missing a commit: `print_branch $i`"
	echo
      else
        [ "$branch_in_repo" ] &&
	echo "The HEAD of a local branch is not current with any remote branch: `print_branch $i`"
      fi
      repo_in_branch=
      branch_in_repo=
   done

   rm -rf /tmp/$$-{branchlist,originlist}
