#!/bin/bash

progname=${0##*/}
shopt -s nullglob

path_to()
{
	MYPATH="$1"
	chmod +x "$MYPATH" 2>/dev/null
	if which "$MYPATH"  >/dev/null
	then
		# path is OK
		MYPATH=`which "$MYPATH"`
		MYPATH=`dirname "$MYPATH"`
		MYPATH=`cd "$MYPATH";echo "$PWD"`
		return 0
	fi

	chmod +x "$0" 2>/dev/null
	MYPATH=`which "$0"`
	MYPATH=`dirname "$MYPATH"`/"$1"
	chmod +x "$MYPATH" 2>/dev/null
	if which "$MYPATH"  >/dev/null
	then
		MYPATH=`dirname "$MYPATH"`
		MYPATH=`cd "$MYPATH";echo "$PWD"`
		PATH="$PATH":"$MYPATH"
		return 0
	fi

	echo Cannot find "$1"
	exit 1
}

path_to fetch-with-status

cd pkgs 2>/dev/null

info=echo
trace=
git="git_status"

declare -a cloned=( */.git pkgs/*/.git )
declare -a submodule=( ${cloned[@]%/*} )


while [ $# -gt 0 ] ; do
    case "$1" in
	-h | --help )
	    cat <<-EOF
Usage: $progname [-n | -q] COMMAND [ SUBMODULE... ]
Option:
  -n		DonÂ´t actually execute anything,
		just show what would be done.
  -q		Quiet, don't print progress info

COMMAND:
  branch	Show current branch
  branch-av	Show all branches
  clean		Clean tree of non-indexed files
  clean-n	Show files to be cleaned
  diff		Show diff from HEAD to tree
  diff-cached	Show diff from HEAD to index cache
  fetch		Fetch updates
  lsmods	ls-files -m
  merge		merge current branch with origin/BRANCH
  pull		fetch and merge current branch 
  push		push commits upstream
  status	Show status (default)
  update-mods	Update index for all modified files

SUBMODULE:
  If no submodule given, perform git COMMAND on all checked-out submodules

EOF
	    exit 0;;
	-n )
	    trace=echo
	    shift;;	    
	-q )
	    info='#'
	    shift;;
	  branch \
	      | branch-av \
	      | clean \
	      | clean-n \
	      | diff \
	      | diff-cached \
	      | fetch \
	      | lsmods \
	      | merge \
	      | pull \
	      | push \
	      | status \
	      | checkout \
	      | push-with-tags \
	      | update-mods )
	      git=git_$1
	      shift;;
	* )
	    submodule=( $@ )
	    break;;
    esac
done

git_pull ()
{
    git pull
    git fetch --tags
}

git_push ()
{
    git push
}

git_push-with-tags ()
{
    git push --tags
}

git_diff ()
{
    git diff
}

git_branch ()
{
    git branch
}

git_branch-av ()
{
    git branch -a -v
}

git_clean-n ()
{
    git clean -n
}

git_lsmods ()
{
    git ls-files -m
}

get_branch_info()
{
    git branch|grep '^\* '|sed 's/(no branch)/NOBRANCH/'
}

get_branch()
{
    get_branch_info|awk '{ print $2 }'
}

get_sha()
{
    get_branch_info|awk '{ print $3 }'
}

git_checkout()
{
	if ! git checkout "$SUPERBRANCH" 2>/dev/null
	then
		echo No branch "$branch"
	fi
}

git_fetch ()
{
    fetch-with-status
}

git_diff-cached ()
{
    git diff --cached
}

git_update-mods ()
{
    git ls-files -m | git update-index --stdin
}

git_status()
{
	git status|grep -v -e '^nothing to commit' -e '^# On branch '
}

pwd
(cd ..;eval $trace git-submodule init)
SUPERBRANCH=`get_branch`
eval $info ========= . =========
eval $trace $git
for (( i=0; i<${#submodule[@]}; i++)) ; do
    eval $info ========= pkgs/${submodule[i]} =========
    ( cd ${submodule[i]} ; eval $trace $git )
done
